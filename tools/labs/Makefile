KDIR ?= $(shell realpath $(PWD)/../..)

LABS ?= $(shell cd templates && find -mindepth 1 -maxdepth 1 -type d)
MODS = $(shell cd templates && find $(LABS) -mindepth 1 -name Kbuild | xargs dirname)
TODO ?= 0

include qemu/Makefile

skels:
	mkdir -p skels
	cd templates && find $(LABS) -type f | xargs ./generate_skels.py --output ../skels --todo $(TODO)
	rm -f skels/Kbuild

skels/Kbuild:
	echo "# autogenerated, do not edit " > $@
	echo "ccflags-y += -Wno-unused-function -Wno-unused-label -Wno-unused-variable " >> $@
	for i in $(shell cd skels && find -mindepth 1 -name Kbuild | xargs --no-run-if-empty dirname); do echo "obj-m += $$i/" >> $@; done

build: $(KCONFIG) skels/Kbuild
	$(MAKE) -C $(KDIR) M=$(KDIR)/tools/labs/skels ARCH=$(ARCH) modules
	for i in $(shell find skels -name Makefile | xargs --no-run-if-empty dirname); do $(MAKE) -C $$i; done

copy: $(YOCTO_IMAGE)
	@qemu/copy.sh $(YOCTO_IMAGE)

docker-docs:
	cd docker && docker-compose build docs-build
	cd docker && docker-compose up -d docs-build
	cd docker && docker-compose exec -u ubuntu docs-build bash -c "cd /linux/tools/labs && make docs"

docker-docs-server:
	cd docker && docker-compose build docs-server
	cd docker && docker-compose up -d docs-server

docker-kernel:
	cd docker && ARG_UID=$(shell id -u) ARG_GID=$(shell id -g) docker-compose build kernel-build
	cd docker && docker-compose up -d kernel-build
	cd docker && docker-compose exec -u ubuntu kernel-build bash

stop-docker-kernel:
	cd docker && docker-compose down

docs:
	$(MAKE) -C $(KDIR) DOCBOOKS= SPHINXDIRS="teaching" htmldocs
	$(MAKE) -C $(KDIR) BUILDDIR=$(KDIR)/Documentation/output/slides DOCBOOKS= SPHINXDIRS="teaching" slides
	for i in $(KDIR)/Documentation/output/slides/teaching/lectures/*.html; do name=$$(basename $$i .html); cp $$i $(KDIR)/Documentation/output/teaching/lectures/$$name-slides.html; done
	for i in $(KDIR)/Documentation/output/slides/teaching/so2/lec*.html; do name=$$(basename $$i .html); cp $$i $(KDIR)/Documentation/output/teaching/so2/$$name-slides.html; done
	cp -r $(KDIR)/Documentation/output/slides/teaching/_static $(KDIR)/Documentation/output/teaching/

clean::
	$(MAKE) -C $(KDIR) M=$(KDIR)/tools/labs/skels ARCH=$(ARCH) clean
	for i in $(shell find skels -name Makefile | xargs --no-run-if-empty dirname); do $(MAKE) -C $$i clean; done

clean_skels:
	rm -rfi skels

.PHONY: skels build copy docs docker-docs docker-kernel stop-docker-kernel clean clean_skels
